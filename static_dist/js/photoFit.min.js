function PhotoFit(){this.photoListGroup=$(".photos-list-group")}PhotoFit.prototype.listenLoadAllDataEvent=function(){var i=this;msybajax.get({url:"/photo/list/",success:function(t){if(200===t.code)for(var o=t.data,e=0;e<o.length;e++){var n=o[e],a=template("photos-item",{photo:n});i.photoListGroup.append(a);n=i.photoListGroup.find(".photos-item:last"),a=i.photoListGroup.find(".data-item:last");i.listenAddImageEvent(n),i.listenCloseBtnEvent(n),i.listenSavePhotoBtnEvent(n),i.listenExtractDataEvent(n),i.listenDisplayPersonModelEvent(n),i.listenLoadAllModelEvent(a)}}})},PhotoFit.prototype.listenAddBannerUpEvent=function(){var t=this;$("#add-photo-btn").click(function(){6<=t.photoListGroup.children().length?window.messageBox.showInfo("只能添加6张图片哦~~"):t.createPhotoBtnEvent()})},PhotoFit.prototype.createPhotoBtnEvent=function(){var t=this,o=template("photos-item");t.photoListGroup.prepend(o);var e=t.photoListGroup.find(".photos-item:first"),o=t.photoListGroup.find(".data-item:last");t.listenAddImageEvent(e),t.listenCloseBtnEvent(e),t.listenSavePhotoBtnEvent(e),t.listenExtractDataEvent(e),t.listenDisplayPersonModelEvent(e),t.listenLoadAllModelEvent(o)},PhotoFit.prototype.listenAddImageEvent=function(t){var e=t.find(".thumbnail"),o=t.find(".image-input");e.click(function(){o.click()}),o.change(function(){var t=this.files[0],o=new FormData;o.append("file",t),msybajax.post({url:"/upload/file/",data:o,processData:!1,contentType:!1,success:function(t){200===t.code&&(t=t.data.url,e.attr("src",t))}})})},PhotoFit.prototype.listenCloseBtnEvent=function(e){var n=this;e.find(".close-btn").click(function(){var t=e.attr("data-photo-id");t?msybalert.alertConfirm({text:"您确定要删除该照片吗？无法撤销哦！~~~",confirmCallback:function(){msybajax.post({url:"/del/photo/",data:{photo_id:t},success:function(t){e.remove(),window.messageBox.showSuccess(t.message)}})}}):e.remove();var o=n.photoListGroup.find(".data-item");modelId=e.attr("data-model-id"),console.log(modelId),modelId?msybalert.alertConfirm({confirmCallback:function(){msybajax.post({url:"/del/model/",data:{model_id:modelId},success:function(t){o.remove()}})}}):o.remove()})},PhotoFit.prototype.listenSavePhotoBtnEvent=function(t){var o=t.find(".save-btn"),e=t.find(".thumbnail");o.click(function(){var t=e.attr("src");msybajax.post({url:"/save/photo/",data:{img_url:t},success:function(t){200===t.code?window.messageBox.showSuccess("图片保存成功！"):(console.log(t.code),console.log(t.message))},fail:function(t){console.log(t.message)}})})},PhotoFit.prototype.listenAddBannerEvent=function(){var t=this;$("#add-photo-btn").click(function(){t.createPhotoBtnEvent()})},PhotoFit.prototype.listenExtractDataEvent=function(o){o.find(".extract-data-btn").click(function(){var t=o.find(".thumbnail").attr("src");msybajax.post({url:"/extract/data/",data:{img_url:t},success:function(t){200===t.code&&window.messageBox.showSuccess(t.message)}})})},PhotoFit.prototype.listenDisplayPersonModelEvent=function(t){var n=this,a=(t.find(".data-item"),t.find(".modelThumbnail"));t.find(".extract-data-btn").click(function(){antajax.get({url:"/model/serialize/",success:function(t){if(200===t.code){models=t.data;for(var o=0;o<models.length;o++){var e=models[o],e=template("photos-item",{model:e});n.photoListGroup.append(e),url=t.data[o].model_url,a.attr("src",url)}}}})})},PhotoFit.prototype.listenLoadAllModelEvent=function(t){var a=t.find(".modelThumbnail");msybajax.get({url:"/model/serialize/",success:function(t){if(200===t.code)for(var o=t.data,e=0;e<o.length;e++){var n=t.data[e].model_url;a.attr("src",n)}}})},PhotoFit.prototype.run=function(){this.listenExtractDataEvent()},PhotoFit.prototype.run=function(){this.listenAddBannerEvent(),this.listenLoadAllDataEvent()},$(function(){(new PhotoFit).run()});
//# sourceMappingURL=data:application/json;base64,
